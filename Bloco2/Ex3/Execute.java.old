@SuppressWarnings("CheckReturnValue")
public class Execute extends CalculatorBaseVisitor<Double> {

   @Override public Double visitStat(CalculatorParser.StatContext ctx) {
      Double res = visit(ctx.expr());
      System.out.println(res);
      return res;
   }

   @Override public Double visitExprAddSub(CalculatorParser.ExprAddSubContext ctx) {
      Double n1 = visit(ctx.expr(0));
      Double n2 = visit(ctx.expr(1));
      Double res = null;
      switch (ctx.op.getText()) {
         case "+" :
            res = n1 + n2;
            break;
         case "-" :
            res = n1 - n2;
            break;
      }
      return res;
   }


   @Override public Double visitExprParent(CalculatorParser.ExprParentContext ctx) {
      return visit(ctx.expr());
   }

   @Override public Double visitExprInteger(CalculatorParser.ExprIntegerContext ctx) {
      Double numb = Double.parseDouble(ctx.Integer().getText());
      return numb;      
   }

   @Override public Double visitExprMultDivMod(CalculatorParser.ExprMultDivModContext ctx) {
      Double n1 = visit(ctx.expr(0));
      Double n2 = visit(ctx.expr(1));
      Double res = null;
      switch (ctx.op.getText()) {
         case "%" :
            res = n1 - n2;
            break;
         case "*" :
            res = n1 * n2;
            break;
         case "/" :
            res = n1 / n2;
            break;
      }
      return res;
   }
}
